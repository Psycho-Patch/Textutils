{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","placeholder","TextForm","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f65282d8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n\r\n    // Navbar Navigation\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-a\" href=\"/about\">\r\n                  {props.aboutText}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/*  */}\r\n\r\n            {/* Darkmode Button */}\r\n            <div className={`form-check form-switch mx-3 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Toggle Modes</label>\r\n            </div>\r\n            {/* Darkmode ends */}\r\n\r\n            {/* Search Bar */}\r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n            {/* Search Ends */}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n    // Navbar Ends here\r\n\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set Title here',\r\n  aboutText: 'About us'\r\n}","import React, { useState } from \"react\";\r\nexport default function TextForm(props) {\r\n\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    // console.log(\"Uppercase was Clicked\" + text);\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    // console.log(\"Uppercase was Clicked\" + text);\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    console.log(\"I am Copy\");\r\n    var text  = document.getElementById(\"myBox\");\r\n    text.select();\r\n    text.setSelectionRange(0,99999);\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard\", \"success\");\r\n\r\n  }\r\n\r\n  const handleClearClick = () =>{\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared!\", \"success\");\r\n  }\r\n\r\n  const handleExtraSpaces = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra Spaces Removed\", \"success\");\r\n  }\r\n\r\n  let [text, setText] = useState(\"\");\r\n  // let [text] = useState('Enter text here');\r\n  // let [text, setText] = useState('Enter text here');\r\n  // text = \"new Text\"; // Wrong way to change the state\r\n  // setText (\"new Text\"); // Correct way to change the state\r\n  return (\r\n    <>\r\n      {/* document.title = 'textUtils -Home'; */}\r\n\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}\r\n>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n        style={{backgroundColor: props.mode==='dark'?'#173d38':'white', color: props.mode==='dark'?'white':'black'}}\r\n\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          id=\"myBox\"\r\n          rows=\"10\"\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h2>Your Text Summary</h2>\r\n      <p> {text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} minutes read time </p>\r\n      <h2>Preview</h2>\r\n      <p className=\"blink text-wrap\">{text.length>0?text:\"Enter Something in the textbox above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n  \r\n}//042723\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize( props.alert.type)} </strong> : {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport \"./Text.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from './components/About';\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  /**************** Toggle Display Mode ***************/\n  const [mode, setMode] = useState(\"light\"); //Whether Darkmode is Enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"darkslategrey\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.body.style.color = \"white\";\n\n      // to make title blink\n      // setInterval(() => {\n      //   document.title = \"TextUtils is Amazing\"\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\"\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.body.style.color = \"black\";\n    }\n    /****************** Display close *****************/\n  };\n\n  return (\n    <>\n    \n      {/* Navbar */}\n      <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n\n      {/* Alert */}\n      <Alert alert={alert} />\n\n      {/* Text area */}\n\n    {/* Routing to About Page */}\n    {/* <Router> */}\n      {/* <div className=\"container my-3\">\n        <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">*/}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n          {/*</Route>\n        </Switch>\n      </div>\n      </Router> */}\n      {/* <About/> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}